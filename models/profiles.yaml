models:
  - name: customer_id_graph
    model_type: id_stitcher
    model_spec:
      validity_time: 24h # 1 day
      entity_key: user
      edge_sources:
        - from: inputs/rsAndroidAccountCreated
        - from: inputs/rsAndroidLiveView
        - from: inputs/rsAndroidLogin
        - from: inputs/rsAndroidTracks
        - from: inputs/rsAndroidVideoClipViewed
        - from: inputs/rsSubServiceRenewal
        - from: inputs/rsSubServiceStart
        - from: inputs/rsSubServiceUpgrade
        - from: inputs/rsSubServiceTrack
        - from: inputs/rsIOSAccountCreated
        - from: inputs/rsIOSLiveView
        - from: inputs/rsIOSLogin
        - from: inputs/rsIOSTracks
        - from: inputs/rsIOSVideoClipViewed
        - from: inputs/rsDeviceCameraActivated
        - from: inputs/rsDeviceMotionDetected
        - from: inputs/rsDeviceTracks
        - from: inputs/rsMarketingAddedToCart
        - from: inputs/rsMarketingFormSubmit
        - from: inputs/rsMarketingIdentifies
        - from: inputs/rsMarketingPages
        - from: inputs/rsMarketingProductViewed
        - from: inputs/rsMarketingTracks
        - from: inputs/rsShopifyOrderCompleted
  # Remove the section below, if you don't want to generate a feature table
  - name: customer_profile
    model_type: feature_table_model
    model_spec:
      validity_time: 24h # 1 day
      entity_key: user
      features:
        - total_sessions_to_date
        - days_since_account_creation
        - days_since_last_seen
        - first_name
        - last_name
        - user_email
#         - last_transaction_value
#         - highest_transaction_value
#         - median_transaction_value
#         - avg_transaction_value
#         - total_transactions
#         - is_churned_7_days
#         - days_since_last_cart_add
#         - days_since_last_purchase
#         - days_since_first_purchase
#         - has_bankruptcy
#         - has_credit_card
#         - has_personal_loan
#         - has_auto_loan
#         - has_insurance_coverage
#         - propensity_to_apply_for_loan
#         - propensity_to_apply_for_credit_card
#         - avg_units_per_transaction
#         - total_carts
#         - total_products_added
#         - products_added_in_past_1_days
#         - products_added_in_past_7_days
#         - products_added_in_past_365_days
#         - transactions_in_past_1_days
#         - transactions_in_past_90_days
#         - transactions_in_past_365_days
#         - net_amt_spent_in_past_1_days
#         - net_amt_spent_in_past_90_days
#         - net_amt_spent_in_past_365_days
#         - net_amt_spent_in_past
#         - gross_amt_spent_in_past
#         - items_purchased_ever
var_groups:
  - name: user_vars
    entity_key: user
    vars:
      - entity_var:
          name: total_sessions_to_date
          from: models/rsTracksUnionPages
          select: count(distinct context_session_id)
          where: context_session_id is not null
          description: Total individual sessions created till date.
      - entity_var:
          name: max_timestamp_cart_update
          select: max(timestamp)
          from: inputs/rsMarketingAddedToCart
          is_feature: false
      - entity_var:
          name: days_since_last_cart_add
          select: "{{macro_datediff('{{user.Var(\"max_timestamp_cart_update\")}}')}}"
          description: Number of days since the user has added a product to cart
      - entity_var:
          name: max_timestamp_tracks
          select: max(timestamp)
          from: inputs/rsMarketingTracks
          is_feature: false
      - entity_var:
          name: max_timestamp_pages
          select: max(timestamp)
          from: inputs/rsMarketingPages
          description: The total value of products that are part of the last transaction.
          is_feature: false
      - entity_var:
          name: max_timestamp_bw_tracks_pages
          select: CASE WHEN {{user.Var("max_timestamp_tracks")}}>={{user.Var("max_timestamp_pages")}} THEN {{user.Var("max_timestamp_tracks")}} ELSE {{user.Var("max_timestamp_pages")}} END
          is_feature: false
      - entity_var:
          name: days_since_last_seen
          select: "{{macro_datediff('{{user.Var(\"max_timestamp_bw_tracks_pages\")}}')}}"
          description: Days since user last logged in
      - entity_var:
          name: is_churned_7_days
          select: case when {{user.Var("days_since_last_seen")}} > 7 then 1 else 0 end
          description: It specifies if there is any activity observed in the last n days. It is dependent on days_since_last_seen
      - entity_var:
          name: max_timestamp_order_created
          select: max(timestamp)
          from: inputs/rsShopifyOrderCompleted
          description: Last purchase date
          is_feature: false
      - entity_var:
          name: days_since_last_purchase
          select: "{{macro_datediff('{{user.Var(\"max_timestamp_order_created\")}}')}}"
          description: Number of days since the user purchased the latest product
      - entity_var:
          name: min_timestamp_order_created
          select: min(timestamp)
          from: inputs/rsShopifyOrderCompleted
          is_feature: false
      - entity_var:
          name: days_since_first_purchase
          select: "{{macro_datediff('{{user.Var(\"min_timestamp_order_created\")}}')}}"
          description: Number of days since the user purchased the first product
#       - entity_var:
#           name: has_credit_card
#           select: max(case when lower(payment_details_credit_card_company) in ('visa','american express','mastercard') then 1 else 0 end)
#           from: inputs/rsOrderCreated
#           description: If the user has a credit card.
#       - entity_var:
#           name: has_bankruptcy
#           select: round(right(random(), 1)/10)
#           from: inputs/rsOrderCreated
#           description: Has the customer ever filed for bankruptcy
#       - entity_var:
#           name: has_personal_loan
#           select: round(right(random(), 1)/10)
#           from: inputs/rsOrderCreated
#           description: Does the customer have a personal loan through Equifax
#       - entity_var:
#           name: has_auto_loan
#           select: round(right(random(), 1)/10)
#           from: inputs/rsOrderCreated
#           description: Does the customer have an auto loan through Equifax
#       - entity_var:
#           name: has_insurance_coverage
#           select: round(right(random(), 1)/10)
#           from: inputs/rsOrderCreated
#           description: Does the customer have an equifax recommended insurance plan
#       - entity_var:
#           name: propensity_to_apply_for_loan
#           select: right(random(), 2)/100
#           from: inputs/rsPages
#           description: Likelihood customer will apply for loan in next 7 days
#       - entity_var:
#           name: propensity_to_apply_for_credit_card
#           select: right(random(), 2)/100
#           from: inputs/rsPages
#           description: Likelihood customer will apply for credit card in next 7 days
    #   - entity_var:
    #       name: avg_units_per_transaction
    #       select: avg({{ array_size ( 'products' )}}::real)
    #       from: inputs/rsShopifyOrderCompleted
    #       description: It shows the average units purchased in each transaction. (Total units in each transaction/Total transactions). Includes only those transactions where the total price (from column current_total_price) is greater than zero. So, the feature exclude transactions with 100% off, replacement products etc that may result in the total_price being equal to zero.
#       - entity_var:
#           name: avg_transaction_value
#           select: avg( total_price_usd ::real)
#           from: inputs/rsOrderCreated
#           description: Total price in each transaction/Total number of transactions.
#       - entity_var:
#           name: highest_transaction_value
#           select: max(total_price_usd::real)
#           from: inputs/rsOrderCreated
#           description: Of all the transactions done by the user, this features contains the highest transaction value.
#       - entity_var:
#           name: median_transaction_value
#           select: median( total_price_usd ::real)
#           from: inputs/rsOrderCreated
#           description: Median value of total price of all the transactions
#       - entity_var:
#           name: total_transactions
#           select: count(*)
#           from: inputs/rsOrderCreated
#           description: Total number of transactions done by the user
#       - entity_var:
#           name: last_transaction_value
#           from: inputs/rsOrderCreated
#           select: first_value(total_price_usd)
#           window:
#             order_by:
#               - case when TOTAL_PRICE_USD is not null then 2 else 1 end desc
#               - timestamp desc
#           description: The total value of products that are part of the last transaction.
      - entity_var:
          name: days_since_account_creation
          select: "{{macro_datediff('min(timestamp)')}}"
          from: inputs/rsMarketingIdentifies
          description: Number of days since loyalty account was created
      - entity_var:
          name: first_name
          select: first_value(FIRST_NAME)
          from: inputs/rsShopifyOrderCompleted
          window:
            order_by:
              - timestamp desc
          where: first_name is not null 
          description: First name of the customer
      - entity_var:
          name: last_name
          select: first_value(LAST_NAME)
          from: inputs/rsShopifyOrderCompleted
          window:
            order_by:
              - timestamp desc
          where: last_name is not null 
          description: Last name of the customer
      - entity_var:
          name: user_email
          select: first_value(email)
          from: inputs/rsShopifyOrderCompleted
          window:
            order_by:
              - timestamp desc
          where: email is not null 
          description: Most recently seen email associated to the user
#       - entity_var:
#           name: total_carts
#           select: count(distinct token)
#           from: inputs/rsCartUpdate
#           description: Total carts created by the user till date.
#       - entity_var:
#           name: total_products_added
#           select: array_agg(distinct product_id)
#           from: models/rsCartLineItems
#           description: Total products added to cart till date. (array with list of all product ids). It includes all purchased products plus current active cart.
#       - entity_var:
#           name: products_added_in_past_1_days
#           select: array_agg(distinct product_id)
#           from: models/rsCartLineItems
#           where: "{{macro_datediff_n('timestamp','1')}}"
#           description: List of products added to cart by the user in last 1 days. (array with list of all product ids). It includes all purchased products plus current active cart.
#       - entity_var:
#           name: products_added_in_past_7_days
#           select: array_agg(distinct product_id)
#           from: models/rsCartLineItems
#           where: "{{macro_datediff_n('timestamp','7')}}"
#           description: List of products added to cart by the user in last 7 days. (array with list of all product ids). It includes all purchased products plus current active cart.
#       - entity_var:
#           name: products_added_in_past_365_days
#           select: array_agg(distinct product_id)
#           from: models/rsCartLineItems
#           where: "{{macro_datediff_n('timestamp',365)}}"
#           description: List of products added to cart by the user in last 365 days. (array with list of all product ids). It includes all purchased products plus current active cart.
#       - entity_var:
#           name: latest_cart_id
#           from: models/rsCartLineItems
#           select: first_value(token)
#           window:
#             order_by:
#               - timestamp desc
#           description: Last known cart id
#           is_feature: false
#       - entity_var:
#           name: transactions_in_past_1_days
#           select: count(*)::real
#           from: models/rsOrderCreatedOrderCancelled
#           where: "{{macro_datediff_n('timestamp','1')}}"
#           description: Number of transactions in last 1 day
#       - entity_var:
#           name: transactions_in_past_90_days
#           select: count(*)::real
#           from: models/rsOrderCreatedOrderCancelled
#           where: "{{macro_datediff_n('timestamp','90')}}"
#           description: Number of transactions in last 90 day
#       - entity_var:
#           name: transactions_in_past_365_days
#           select: count(*)::real
#           from: models/rsOrderCreatedOrderCancelled
#           where: "{{macro_datediff_n('timestamp','365')}}"
#           description: Number of transactions in last 365 day
#       - entity_var:
#           name: net_amt_spent_in_past_90_days
#           select: sum(total_price_usd::real) - coalesce(sum(total_price_usd_order_cancelled::real), 0)
#           from: models/rsOrderCreatedOrderCancelled
#           where: "{{macro_datediff_n('timestamp','90')}}"
#           description: Net amount i.e. sales-refund spent by the user in last 90 days.
#       - entity_var:
#           name: net_amt_spent_in_past_365_days
#           select: sum(total_price_usd::real) - coalesce(sum(total_price_usd_order_cancelled::real), 0)
#           from: models/rsOrderCreatedOrderCancelled
#           where: "{{macro_datediff_n('timestamp','365')}}"
#           description: Net amount i.e. sales-refund spent by the user in last 365 days.
#       - entity_var:
#           name: net_amt_spent_in_past_1_days
#           select: sum(total_price_usd::real) - coalesce(sum(total_price_usd_order_cancelled::real), 0)
#           from: models/rsOrderCreatedOrderCancelled
#           where: "{{macro_datediff_n('timestamp','1')}}"
#           description: Net amount i.e. sales-refund spent by the user in last 1 day.
#       - entity_var:
#           name: net_amt_spent_in_past
#           select: sum(total_price_usd::real) - coalesce(sum(total_price_usd_order_cancelled::real), 0)
#           from: models/rsOrderCreatedOrderCancelled
#           description: Net amount i.e. sales-refund spent by the user to date.
#       - entity_var:
#           name: gross_amt_spent_in_past
#           select: sum(total_price_usd::real)
#           from: models/rsOrderCreatedOrderCancelled
#           description: Total value of products purchased till date.
#       - entity_var:
#           name: items_purchased_ever
#           select: array_agg(sku)
#           from: models/rsItemsPurchasedEver
#           description: The list of unique products bought by the user.
